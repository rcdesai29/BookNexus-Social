services:
  postgres:
    image: postgres:16-alpine
    container_name: booknexus_social_postgres
    environment:
      POSTGRES_DB: booknexus_social
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432" # host:container
    volumes:
      - pgdata_social:/var/lib/postgresql/data
    networks:
      - spring-demo
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U username -d booknexus_social"]
      interval: 10s
      timeout: 5s
      retries: 5

  booknexus_social-api:
    container_name: booknexus_social-api
    build:
      context: ./backend
      dockerfile: ../docker/backend/Dockerfile
    ports:
      - "8001:8080"
    networks:
      - spring-demo
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_URL=jdbc:postgresql://booknexus_social_postgres:5432/booknexus_social
      - DB_USERNAME=${DB_USERNAME:-username}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - SERVER_PORT=8080
      - ACTIVE_PROFILE=${ACTIVE_PROFILE:-dev}
      - MAIL_USERNAME=${EMAIL_USERNAME:-booknexus.bookworms@gmail.com}
      - MAIL_PASSWORD=${EMAIL_PASSWORD:-default_password}
      - JWT_SECRET_KEY=${JWT_SECURITY:-404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970}

  booknexus_social-frontend:
    container_name: booknexus_social-frontend
    build:
      context: ./frontend
      dockerfile: ../docker/frontend/Dockerfile
    ports:
      - "3000:80"
    networks:
      - spring-demo
    depends_on:
      - booknexus_social-api

  maildev:
    image: maildev/maildev:latest
    container_name: booknexus_social_maildev
    ports:
      - "1081:1080" # Web UI
      - "1026:1025" # SMTP
    environment:
      - MAILDEV_MAIL_DIRECTORY=/tmp
    volumes:
      - maildata_social:/tmp

volumes:
  pgdata_social:
  maildata_social:

networks:
  spring-demo:

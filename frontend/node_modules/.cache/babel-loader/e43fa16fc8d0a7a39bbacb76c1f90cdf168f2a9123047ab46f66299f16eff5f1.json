{"ast":null,"code":"import{OpenAPI}from'../core/OpenAPI';import{request as __request}from'../core/request';export class GoogleBooksService{/**\n   * Search for books using Google Books API\n   */static async searchBooks(query){let maxResults=arguments.length>1&&arguments[1]!==undefined?arguments[1]:20;let startIndex=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;const queryParams=new URLSearchParams({q:query,maxResults:maxResults.toString(),startIndex:startIndex.toString()});const result=await __request(OpenAPI,{method:'GET',url:\"\".concat(this.BASE_URL,\"/search?\").concat(queryParams.toString()),headers:{'Content-Type':'application/json'}});return result;}/**\n   * Get popular books by category\n   */static async getPopularBooks(){let category=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'fiction';let maxResults=arguments.length>1&&arguments[1]!==undefined?arguments[1]:20;const queryParams=new URLSearchParams({category:category,maxResults:maxResults.toString()});const result=await __request(OpenAPI,{method:'GET',url:\"\".concat(this.BASE_URL,\"/popular?\").concat(queryParams.toString()),headers:{'Content-Type':'application/json'}});return result;}/**\n   * Get trending books (recently published)\n   */static async getTrendingBooks(){let maxResults=arguments.length>0&&arguments[0]!==undefined?arguments[0]:20;const queryParams=new URLSearchParams({maxResults:maxResults.toString()});const result=await __request(OpenAPI,{method:'GET',url:\"\".concat(this.BASE_URL,\"/trending?\").concat(queryParams.toString()),headers:{'Content-Type':'application/json'}});return result;}/**\n   * Get book details by Google Books ID\n   */static async getBookById(bookId){const result=await __request(OpenAPI,{method:'GET',url:\"\".concat(this.BASE_URL,\"/\").concat(bookId),headers:{'Content-Type':'application/json'}});return result;}/**\n   * Convert Google Book to our Book format\n   */static convertGoogleBookToBookFormat(googleBook){var _volumeInfo$industryI,_volumeInfo$industryI2,_volumeInfo$industryI3,_volumeInfo$industryI4,_volumeInfo$authors,_volumeInfo$imageLink;const volumeInfo=googleBook.volumeInfo;const isbn=((_volumeInfo$industryI=volumeInfo.industryIdentifiers)===null||_volumeInfo$industryI===void 0?void 0:(_volumeInfo$industryI2=_volumeInfo$industryI.find(id=>id.type==='ISBN_13'))===null||_volumeInfo$industryI2===void 0?void 0:_volumeInfo$industryI2.identifier)||((_volumeInfo$industryI3=volumeInfo.industryIdentifiers)===null||_volumeInfo$industryI3===void 0?void 0:(_volumeInfo$industryI4=_volumeInfo$industryI3.find(id=>id.type==='ISBN_10'))===null||_volumeInfo$industryI4===void 0?void 0:_volumeInfo$industryI4.identifier)||'';return{id:googleBook.id,title:volumeInfo.title||'Unknown Title',authorName:((_volumeInfo$authors=volumeInfo.authors)===null||_volumeInfo$authors===void 0?void 0:_volumeInfo$authors.join(', '))||'Unknown Author',isbn:isbn,synopsis:volumeInfo.description||'No description available.',cover:((_volumeInfo$imageLink=volumeInfo.imageLinks)===null||_volumeInfo$imageLink===void 0?void 0:_volumeInfo$imageLink.thumbnail)||null,publishedDate:volumeInfo.publishedDate,pageCount:volumeInfo.pageCount,categories:volumeInfo.categories,averageRating:volumeInfo.averageRating||0,ratingsCount:volumeInfo.ratingsCount||0,isGoogleBook:true,googleBookId:googleBook.id};}}GoogleBooksService.BASE_URL='http://localhost:8088/api/v1/google-books';","map":{"version":3,"names":["OpenAPI","request","__request","GoogleBooksService","searchBooks","query","maxResults","arguments","length","undefined","startIndex","queryParams","URLSearchParams","q","toString","result","method","url","concat","BASE_URL","headers","getPopularBooks","category","getTrendingBooks","getBookById","bookId","convertGoogleBookToBookFormat","googleBook","_volumeInfo$industryI","_volumeInfo$industryI2","_volumeInfo$industryI3","_volumeInfo$industryI4","_volumeInfo$authors","_volumeInfo$imageLink","volumeInfo","isbn","industryIdentifiers","find","id","type","identifier","title","authorName","authors","join","synopsis","description","cover","imageLinks","thumbnail","publishedDate","pageCount","categories","averageRating","ratingsCount","isGoogleBook","googleBookId"],"sources":["/Users/cluckbucks/projects/booknexus-social/frontend/src/app/services/services/GoogleBooksService.ts"],"sourcesContent":["import { OpenAPI } from '../core/OpenAPI';\nimport { request as __request } from '../core/request';\n\nexport interface GoogleBookVolumeInfo {\n  title: string;\n  authors?: string[];\n  description?: string;\n  imageLinks?: {\n    thumbnail?: string;\n    smallThumbnail?: string;\n  };\n  publishedDate?: string;\n  pageCount?: number;\n  categories?: string[];\n  averageRating?: number;\n  ratingsCount?: number;\n  industryIdentifiers?: Array<{\n    type: string;\n    identifier: string;\n  }>;\n}\n\nexport interface GoogleBookItem {\n  id: string;\n  volumeInfo: GoogleBookVolumeInfo;\n}\n\nexport interface GoogleBooksResponse {\n  items?: GoogleBookItem[];\n  totalItems: number;\n}\n\nexport class GoogleBooksService {\n  private static readonly BASE_URL = 'http://localhost:8088/api/v1/google-books';\n\n  /**\n   * Search for books using Google Books API\n   */\n  public static async searchBooks(\n    query: string,\n    maxResults: number = 20,\n    startIndex: number = 0\n  ): Promise<GoogleBooksResponse> {\n    const queryParams = new URLSearchParams({\n      q: query,\n      maxResults: maxResults.toString(),\n      startIndex: startIndex.toString()\n    });\n\n    const result = await __request(OpenAPI, {\n      method: 'GET',\n      url: `${this.BASE_URL}/search?${queryParams.toString()}`,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    return result as GoogleBooksResponse;\n  }\n\n  /**\n   * Get popular books by category\n   */\n  public static async getPopularBooks(\n    category: string = 'fiction',\n    maxResults: number = 20\n  ): Promise<GoogleBooksResponse> {\n    const queryParams = new URLSearchParams({\n      category: category,\n      maxResults: maxResults.toString()\n    });\n\n    const result = await __request(OpenAPI, {\n      method: 'GET',\n      url: `${this.BASE_URL}/popular?${queryParams.toString()}`,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    return result as GoogleBooksResponse;\n  }\n\n  /**\n   * Get trending books (recently published)\n   */\n  public static async getTrendingBooks(\n    maxResults: number = 20\n  ): Promise<GoogleBooksResponse> {\n    const queryParams = new URLSearchParams({\n      maxResults: maxResults.toString()\n    });\n\n    const result = await __request(OpenAPI, {\n      method: 'GET',\n      url: `${this.BASE_URL}/trending?${queryParams.toString()}`,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    return result as GoogleBooksResponse;\n  }\n\n  /**\n   * Get book details by Google Books ID\n   */\n  public static async getBookById(bookId: string): Promise<GoogleBookItem> {\n    const result = await __request(OpenAPI, {\n      method: 'GET',\n      url: `${this.BASE_URL}/${bookId}`,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    return result as GoogleBookItem;\n  }\n\n  /**\n   * Convert Google Book to our Book format\n   */\n  public static convertGoogleBookToBookFormat(googleBook: GoogleBookItem): any {\n    const volumeInfo = googleBook.volumeInfo;\n    const isbn = volumeInfo.industryIdentifiers?.find(id => id.type === 'ISBN_13')?.identifier ||\n                 volumeInfo.industryIdentifiers?.find(id => id.type === 'ISBN_10')?.identifier ||\n                 '';\n\n    return {\n      id: googleBook.id,\n      title: volumeInfo.title || 'Unknown Title',\n      authorName: volumeInfo.authors?.join(', ') || 'Unknown Author',\n      isbn: isbn,\n      synopsis: volumeInfo.description || 'No description available.',\n      cover: volumeInfo.imageLinks?.thumbnail || null,\n      publishedDate: volumeInfo.publishedDate,\n      pageCount: volumeInfo.pageCount,\n      categories: volumeInfo.categories,\n      averageRating: volumeInfo.averageRating || 0,\n      ratingsCount: volumeInfo.ratingsCount || 0,\n      isGoogleBook: true,\n      googleBookId: googleBook.id\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { tokenService } from '../services/tokenService';\nexport function useAuth() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(tokenService.isLoggedIn());\n  const [user, setUser] = useState(tokenService.getUser());\n  useEffect(() => {\n    const checkAuthStatus = () => {\n      // Check if token is expired first\n      if (tokenService.isTokenExpired()) {\n        tokenService.logout();\n        return;\n      }\n      const loggedIn = tokenService.isLoggedIn();\n      const currentUser = tokenService.getUser();\n      setIsLoggedIn(loggedIn);\n      setUser(currentUser);\n    };\n\n    // Check auth status immediately\n    checkAuthStatus();\n\n    // Listen for storage changes (when token is set/removed in other tabs)\n    const handleStorageChange = e => {\n      if (e.key === 'auth_token') {\n        checkAuthStatus();\n      }\n    };\n    window.addEventListener('storage', handleStorageChange);\n\n    // Listen for custom auth events (when token is set/removed in same tab)\n    const handleAuthChange = () => {\n      checkAuthStatus();\n    };\n    window.addEventListener('authStateChange', handleAuthChange);\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n      window.removeEventListener('authStateChange', handleAuthChange);\n    };\n  }, []);\n  return {\n    isLoggedIn,\n    user\n  };\n}\n_s(useAuth, \"iGM57OdVsK4N20bJ+3y7oaIc+Ug=\");","map":{"version":3,"names":["useState","useEffect","tokenService","useAuth","_s","isLoggedIn","setIsLoggedIn","user","setUser","getUser","checkAuthStatus","isTokenExpired","logout","loggedIn","currentUser","handleStorageChange","e","key","window","addEventListener","handleAuthChange","removeEventListener"],"sources":["/Users/cluckbucks/projects/booknexus-social/frontend/src/hooks/useAuth.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { tokenService } from '../services/tokenService';\n\nexport function useAuth() {\n  const [isLoggedIn, setIsLoggedIn] = useState(tokenService.isLoggedIn());\n  const [user, setUser] = useState(tokenService.getUser());\n\n  useEffect(() => {\n    const checkAuthStatus = () => {\n      // Check if token is expired first\n      if (tokenService.isTokenExpired()) {\n        tokenService.logout();\n        return;\n      }\n      \n      const loggedIn = tokenService.isLoggedIn();\n      const currentUser = tokenService.getUser();\n      \n      setIsLoggedIn(loggedIn);\n      setUser(currentUser);\n    };\n\n    // Check auth status immediately\n    checkAuthStatus();\n\n    // Listen for storage changes (when token is set/removed in other tabs)\n    const handleStorageChange = (e: StorageEvent) => {\n      if (e.key === 'auth_token') {\n        checkAuthStatus();\n      }\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n\n    // Listen for custom auth events (when token is set/removed in same tab)\n    const handleAuthChange = () => {\n      checkAuthStatus();\n    };\n\n    window.addEventListener('authStateChange', handleAuthChange);\n\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n      window.removeEventListener('authStateChange', handleAuthChange);\n    };\n  }, []);\n\n  return { isLoggedIn, user };\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,YAAY,QAAQ,0BAA0B;AAEvD,OAAO,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAACE,YAAY,CAACG,UAAU,CAAC,CAAC,CAAC;EACvE,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAACE,YAAY,CAACO,OAAO,CAAC,CAAC,CAAC;EAExDR,SAAS,CAAC,MAAM;IACd,MAAMS,eAAe,GAAGA,CAAA,KAAM;MAC5B;MACA,IAAIR,YAAY,CAACS,cAAc,CAAC,CAAC,EAAE;QACjCT,YAAY,CAACU,MAAM,CAAC,CAAC;QACrB;MACF;MAEA,MAAMC,QAAQ,GAAGX,YAAY,CAACG,UAAU,CAAC,CAAC;MAC1C,MAAMS,WAAW,GAAGZ,YAAY,CAACO,OAAO,CAAC,CAAC;MAE1CH,aAAa,CAACO,QAAQ,CAAC;MACvBL,OAAO,CAACM,WAAW,CAAC;IACtB,CAAC;;IAED;IACAJ,eAAe,CAAC,CAAC;;IAEjB;IACA,MAAMK,mBAAmB,GAAIC,CAAe,IAAK;MAC/C,IAAIA,CAAC,CAACC,GAAG,KAAK,YAAY,EAAE;QAC1BP,eAAe,CAAC,CAAC;MACnB;IACF,CAAC;IAEDQ,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEJ,mBAAmB,CAAC;;IAEvD;IACA,MAAMK,gBAAgB,GAAGA,CAAA,KAAM;MAC7BV,eAAe,CAAC,CAAC;IACnB,CAAC;IAEDQ,MAAM,CAACC,gBAAgB,CAAC,iBAAiB,EAAEC,gBAAgB,CAAC;IAE5D,OAAO,MAAM;MACXF,MAAM,CAACG,mBAAmB,CAAC,SAAS,EAAEN,mBAAmB,CAAC;MAC1DG,MAAM,CAACG,mBAAmB,CAAC,iBAAiB,EAAED,gBAAgB,CAAC;IACjE,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEf,UAAU;IAAEE;EAAK,CAAC;AAC7B;AAACH,EAAA,CA7CeD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
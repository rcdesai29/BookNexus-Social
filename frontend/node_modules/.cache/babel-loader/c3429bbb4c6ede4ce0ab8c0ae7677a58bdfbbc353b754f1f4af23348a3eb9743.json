{"ast":null,"code":"import{useEffect,useState}from'react';import{GoogleBooksService}from'../app/services/services/GoogleBooksService';export function useGoogleBooks(){let query=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'bestsellers';let maxResults=arguments.length>1&&arguments[1]!==undefined?arguments[1]:20;let startIndex=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;const[data,setData]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[totalItems,setTotalItems]=useState(0);useEffect(()=>{setLoading(true);setError(null);const fetchBooks=async()=>{try{let response;if(query==='trending'){response=await GoogleBooksService.getTrendingBooks(maxResults);}else if(query==='popular'){response=await GoogleBooksService.getPopularBooks('fiction',maxResults);}else if(query==='bestsellers'){// Search for popular books with high ratings and recent publications\nresponse=await GoogleBooksService.searchBooks('bestseller fiction 2024',maxResults,startIndex);}else{response=await GoogleBooksService.searchBooks(query,maxResults,startIndex);}const convertedBooks=(response.items||[]).map(book=>GoogleBooksService.convertGoogleBookToBookFormat(book));// Filter out books with very low rating counts to avoid showing fake-looking ratings\nconst filteredBooks=convertedBooks.filter(book=>book.ratingsCount===0||book.ratingsCount>=10);setData(filteredBooks);setTotalItems(response.totalItems);}catch(err){setError(err);}finally{setLoading(false);}};fetchBooks();},[query,maxResults,startIndex]);return{data,loading,error,totalItems};}export function useTrendingBooks(){let maxResults=arguments.length>0&&arguments[0]!==undefined?arguments[0]:5;return useGoogleBooks('trending',maxResults);}export function usePopularBooks(){let maxResults=arguments.length>0&&arguments[0]!==undefined?arguments[0]:10;return useGoogleBooks('popular',maxResults);}export function useBestsellers(){let maxResults=arguments.length>0&&arguments[0]!==undefined?arguments[0]:20;return useGoogleBooks('bestsellers',maxResults);}","map":{"version":3,"names":["useEffect","useState","GoogleBooksService","useGoogleBooks","query","arguments","length","undefined","maxResults","startIndex","data","setData","loading","setLoading","error","setError","totalItems","setTotalItems","fetchBooks","response","getTrendingBooks","getPopularBooks","searchBooks","convertedBooks","items","map","book","convertGoogleBookToBookFormat","filteredBooks","filter","ratingsCount","err","useTrendingBooks","usePopularBooks","useBestsellers"],"sources":["/Users/cluckbucks/projects/booknexus-social/frontend/src/hooks/useGoogleBooks.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { GoogleBooksService, GoogleBooksResponse } from '../app/services/services/GoogleBooksService';\n\nexport interface GoogleBook {\n  id: string;\n  title: string;\n  authorName: string;\n  isbn: string;\n  synopsis: string;\n  cover: string | null;\n  publishedDate?: string;\n  pageCount?: number;\n  categories?: string[];\n  averageRating: number;\n  ratingsCount: number;\n  isGoogleBook: boolean;\n  googleBookId: string;\n}\n\nexport function useGoogleBooks(\n  query: string = 'bestsellers',\n  maxResults: number = 20,\n  startIndex: number = 0\n) {\n  const [data, setData] = useState<GoogleBook[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<any>(null);\n  const [totalItems, setTotalItems] = useState<number>(0);\n\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    \n    const fetchBooks = async () => {\n      try {\n        let response: GoogleBooksResponse;\n        \n        if (query === 'trending') {\n          response = await GoogleBooksService.getTrendingBooks(maxResults);\n        } else if (query === 'popular') {\n          response = await GoogleBooksService.getPopularBooks('fiction', maxResults);\n        } else if (query === 'bestsellers') {\n          // Search for popular books with high ratings and recent publications\n          response = await GoogleBooksService.searchBooks('bestseller fiction 2024', maxResults, startIndex);\n        } else {\n          response = await GoogleBooksService.searchBooks(query, maxResults, startIndex);\n        }\n\n        const convertedBooks = (response.items || []).map(book => \n          GoogleBooksService.convertGoogleBookToBookFormat(book)\n        );\n\n        // Filter out books with very low rating counts to avoid showing fake-looking ratings\n        const filteredBooks = convertedBooks.filter(book => \n          book.ratingsCount === 0 || book.ratingsCount >= 10\n        );\n\n        setData(filteredBooks);\n        setTotalItems(response.totalItems);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchBooks();\n  }, [query, maxResults, startIndex]);\n\n  return { data, loading, error, totalItems };\n}\n\nexport function useTrendingBooks(maxResults: number = 5) {\n  return useGoogleBooks('trending', maxResults);\n}\n\nexport function usePopularBooks(maxResults: number = 10) {\n  return useGoogleBooks('popular', maxResults);\n}\n\nexport function useBestsellers(maxResults: number = 20) {\n  return useGoogleBooks('bestsellers', maxResults);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
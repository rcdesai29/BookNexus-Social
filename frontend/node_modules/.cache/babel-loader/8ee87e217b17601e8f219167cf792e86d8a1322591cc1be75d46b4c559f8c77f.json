{"ast":null,"code":"import { OpenAPI } from '../core/OpenAPI';\nimport { request as __request } from '../core/request';\nexport class GoogleBookFeedbackService {\n  /**\n   * Save feedback for a Google Book\n   */\n  static async saveFeedback(request) {\n    const result = await __request(OpenAPI, {\n      method: 'POST',\n      url: `${this.BASE_URL}/feedback`,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: request,\n      mediaType: 'application/json'\n    });\n    return result;\n  }\n\n  /**\n   * Get all feedback for a Google Book\n   */\n  static async getFeedbackByGoogleBookId(googleBookId) {\n    const result = await __request(OpenAPI, {\n      method: 'GET',\n      url: `${this.BASE_URL}/feedback/${googleBookId}`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Get average rating for a Google Book\n   */\n  static async getAverageRating(googleBookId) {\n    const result = await __request(OpenAPI, {\n      method: 'GET',\n      url: `${this.BASE_URL}/feedback/${googleBookId}/rating`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Get rating count for a Google Book\n   */\n  static async getRatingCount(googleBookId) {\n    const result = await __request({\n      method: 'GET',\n      path: `${this.BASE_URL}/feedback/${googleBookId}/count`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return result;\n  }\n}\nGoogleBookFeedbackService.BASE_URL = 'http://localhost:8088/api/v1/google-books';","map":{"version":3,"names":["OpenAPI","request","__request","GoogleBookFeedbackService","saveFeedback","result","method","url","BASE_URL","headers","body","mediaType","getFeedbackByGoogleBookId","googleBookId","getAverageRating","getRatingCount","path"],"sources":["/Users/cluckbucks/projects/booknexus-social/frontend/src/app/services/services/GoogleBookFeedbackService.ts"],"sourcesContent":["import { OpenAPI } from '../core/OpenAPI';\nimport { request as __request } from '../core/request';\n\nexport interface GoogleBookFeedbackRequest {\n  googleBookId: string;\n  bookTitle: string;\n  authorName: string;\n  rating: number;\n  review: string;\n}\n\nexport interface GoogleBookFeedbackResponse {\n  id: number;\n  googleBookId: string;\n  bookTitle: string;\n  authorName: string;\n  rating: number;\n  review: string;\n  userName: string;\n  createdDate: string;\n}\n\nexport class GoogleBookFeedbackService {\n  private static readonly BASE_URL = 'http://localhost:8088/api/v1/google-books';\n\n  /**\n   * Save feedback for a Google Book\n   */\n  public static async saveFeedback(request: GoogleBookFeedbackRequest): Promise<number> {\n    const result = await __request(OpenAPI, {\n      method: 'POST',\n      url: `${this.BASE_URL}/feedback`,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: request,\n      mediaType: 'application/json',\n    });\n\n    return result;\n  }\n\n  /**\n   * Get all feedback for a Google Book\n   */\n  public static async getFeedbackByGoogleBookId(googleBookId: string): Promise<GoogleBookFeedbackResponse[]> {\n    const result = await __request(OpenAPI, {\n      method: 'GET',\n      url: `${this.BASE_URL}/feedback/${googleBookId}`,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    return result;\n  }\n\n  /**\n   * Get average rating for a Google Book\n   */\n  public static async getAverageRating(googleBookId: string): Promise<number> {\n    const result = await __request(OpenAPI, {\n      method: 'GET',\n      url: `${this.BASE_URL}/feedback/${googleBookId}/rating`,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    return result;\n  }\n\n  /**\n   * Get rating count for a Google Book\n   */\n  public static async getRatingCount(googleBookId: string): Promise<number> {\n    const result = await __request<number>({\n      method: 'GET',\n      path: `${this.BASE_URL}/feedback/${googleBookId}/count`,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    return result;\n  }\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,SAASC,OAAO,IAAIC,SAAS,QAAQ,iBAAiB;AAqBtD,OAAO,MAAMC,yBAAyB,CAAC;EAGrC;AACF;AACA;EACE,aAAoBC,YAAYA,CAACH,OAAkC,EAAmB;IACpF,MAAMI,MAAM,GAAG,MAAMH,SAAS,CAACF,OAAO,EAAE;MACtCM,MAAM,EAAE,MAAM;MACdC,GAAG,EAAE,GAAG,IAAI,CAACC,QAAQ,WAAW;MAChCC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAET,OAAO;MACbU,SAAS,EAAE;IACb,CAAC,CAAC;IAEF,OAAON,MAAM;EACf;;EAEA;AACF;AACA;EACE,aAAoBO,yBAAyBA,CAACC,YAAoB,EAAyC;IACzG,MAAMR,MAAM,GAAG,MAAMH,SAAS,CAACF,OAAO,EAAE;MACtCM,MAAM,EAAE,KAAK;MACbC,GAAG,EAAE,GAAG,IAAI,CAACC,QAAQ,aAAaK,YAAY,EAAE;MAChDJ,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,OAAOJ,MAAM;EACf;;EAEA;AACF;AACA;EACE,aAAoBS,gBAAgBA,CAACD,YAAoB,EAAmB;IAC1E,MAAMR,MAAM,GAAG,MAAMH,SAAS,CAACF,OAAO,EAAE;MACtCM,MAAM,EAAE,KAAK;MACbC,GAAG,EAAE,GAAG,IAAI,CAACC,QAAQ,aAAaK,YAAY,SAAS;MACvDJ,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,OAAOJ,MAAM;EACf;;EAEA;AACF;AACA;EACE,aAAoBU,cAAcA,CAACF,YAAoB,EAAmB;IACxE,MAAMR,MAAM,GAAG,MAAMH,SAAS,CAAS;MACrCI,MAAM,EAAE,KAAK;MACbU,IAAI,EAAE,GAAG,IAAI,CAACR,QAAQ,aAAaK,YAAY,QAAQ;MACvDJ,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,OAAOJ,MAAM;EACf;AACF;AAhEaF,yBAAyB,CACZK,QAAQ,GAAG,2CAA2C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/cluckbucks/projects/booknexus-social/frontend/src/pages/TestAPI.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestAPI = () => {\n  _s();\n  var _data$items;\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const testDirectFetch = async () => {\n      try {\n        console.log('Testing direct fetch to backend...');\n\n        // Test 1: Direct fetch to backend\n        const response = await fetch('http://localhost:8088/api/v1/google-books/trending?maxResults=5', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('Response status:', response.status);\n        console.log('Response headers:', Object.fromEntries(response.headers.entries()));\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const result = await response.json();\n        console.log('Success! Got result:', result);\n        setData(result);\n      } catch (err) {\n        console.error('Error in direct fetch:', err);\n        setError(err instanceof Error ? err.message : 'Unknown error');\n      } finally {\n        setLoading(false);\n      }\n    };\n    testDirectFetch();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Testing API...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'red'\n    },\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"API Test Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Successfully fetched \", data === null || data === void 0 ? void 0 : (_data$items = data.items) === null || _data$items === void 0 ? void 0 : _data$items.length, \" books\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(data, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(TestAPI, \"cdnblwmK9QuMyYTkxGRQb1PLKRw=\");\n_c = TestAPI;\nexport default TestAPI;\nvar _c;\n$RefreshReg$(_c, \"TestAPI\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TestAPI","_s","_data$items","data","setData","error","setError","loading","setLoading","testDirectFetch","console","log","response","fetch","method","headers","status","Object","fromEntries","entries","ok","Error","result","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","items","length","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/cluckbucks/projects/booknexus-social/frontend/src/pages/TestAPI.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst TestAPI: React.FC = () => {\n  const [data, setData] = useState<any>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const testDirectFetch = async () => {\n      try {\n        console.log('Testing direct fetch to backend...');\n        \n        // Test 1: Direct fetch to backend\n        const response = await fetch('http://localhost:8088/api/v1/google-books/trending?maxResults=5', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n        \n        console.log('Response status:', response.status);\n        console.log('Response headers:', Object.fromEntries(response.headers.entries()));\n        \n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        \n        const result = await response.json();\n        console.log('Success! Got result:', result);\n        setData(result);\n      } catch (err) {\n        console.error('Error in direct fetch:', err);\n        setError(err instanceof Error ? err.message : 'Unknown error');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    testDirectFetch();\n  }, []);\n\n  if (loading) return <div>Testing API...</div>;\n  if (error) return <div style={{color: 'red'}}>Error: {error}</div>;\n\n  return (\n    <div>\n      <h2>API Test Results</h2>\n      <p>Successfully fetched {data?.items?.length} books</p>\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n    </div>\n  );\n};\n\nexport default TestAPI;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
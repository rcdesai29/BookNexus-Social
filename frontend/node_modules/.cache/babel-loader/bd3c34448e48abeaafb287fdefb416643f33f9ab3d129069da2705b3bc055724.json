{"ast":null,"code":"import{OpenAPI}from'../core/OpenAPI';import{request as __request}from'../core/request';export class GoogleBookFeedbackService{/**\n   * Save feedback for a Google Book\n   */static async saveFeedback(request){const result=await __request(OpenAPI,{method:'POST',url:\"\".concat(this.BASE_URL,\"/feedback\"),headers:{'Content-Type':'application/json'},body:request,mediaType:'application/json'});return result;}/**\n   * Get all feedback for a Google Book\n   */static async getFeedbackByGoogleBookId(googleBookId){const result=await __request(OpenAPI,{method:'GET',url:\"\".concat(this.BASE_URL,\"/feedback/\").concat(googleBookId),headers:{'Content-Type':'application/json'}});return result;}/**\n   * Get average rating for a Google Book\n   */static async getAverageRating(googleBookId){const result=await __request(OpenAPI,{method:'GET',url:\"\".concat(this.BASE_URL,\"/feedback/\").concat(googleBookId,\"/rating\"),headers:{'Content-Type':'application/json'}});return result;}/**\n   * Get rating count for a Google Book\n   */static async getRatingCount(googleBookId){const result=await __request(OpenAPI,{method:'GET',url:\"\".concat(this.BASE_URL,\"/feedback/\").concat(googleBookId,\"/count\"),headers:{'Content-Type':'application/json'}});return result;}}GoogleBookFeedbackService.BASE_URL='http://localhost:8088/api/v1/google-books';","map":{"version":3,"names":["OpenAPI","request","__request","GoogleBookFeedbackService","saveFeedback","result","method","url","concat","BASE_URL","headers","body","mediaType","getFeedbackByGoogleBookId","googleBookId","getAverageRating","getRatingCount"],"sources":["/Users/cluckbucks/projects/booknexus-social/frontend/src/app/services/services/GoogleBookFeedbackService.ts"],"sourcesContent":["import { OpenAPI } from '../core/OpenAPI';\nimport { request as __request } from '../core/request';\n\nexport interface GoogleBookFeedbackRequest {\n  googleBookId: string;\n  bookTitle: string;\n  authorName: string;\n  rating: number;\n  review: string;\n}\n\nexport interface GoogleBookFeedbackResponse {\n  id: number;\n  googleBookId: string;\n  bookTitle: string;\n  authorName: string;\n  rating: number;\n  review: string;\n  userName: string;\n  createdDate: string;\n}\n\nexport class GoogleBookFeedbackService {\n  private static readonly BASE_URL = 'http://localhost:8088/api/v1/google-books';\n\n  /**\n   * Save feedback for a Google Book\n   */\n  public static async saveFeedback(request: GoogleBookFeedbackRequest): Promise<number> {\n    const result = await __request(OpenAPI, {\n      method: 'POST',\n      url: `${this.BASE_URL}/feedback`,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: request,\n      mediaType: 'application/json',\n    });\n\n    return result as number;\n  }\n\n  /**\n   * Get all feedback for a Google Book\n   */\n  public static async getFeedbackByGoogleBookId(googleBookId: string): Promise<GoogleBookFeedbackResponse[]> {\n    const result = await __request(OpenAPI, {\n      method: 'GET',\n      url: `${this.BASE_URL}/feedback/${googleBookId}`,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    return result as GoogleBookFeedbackResponse[];\n  }\n\n  /**\n   * Get average rating for a Google Book\n   */\n  public static async getAverageRating(googleBookId: string): Promise<number> {\n    const result = await __request(OpenAPI, {\n      method: 'GET',\n      url: `${this.BASE_URL}/feedback/${googleBookId}/rating`,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    return result as number;\n  }\n\n  /**\n   * Get rating count for a Google Book\n   */\n  public static async getRatingCount(googleBookId: string): Promise<number> {\n    const result = await __request(OpenAPI, {\n      method: 'GET',\n      url: `${this.BASE_URL}/feedback/${googleBookId}/count`,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    return result as number;\n  }\n}\n"],"mappings":"AAAA,OAASA,OAAO,KAAQ,iBAAiB,CACzC,OAASC,OAAO,GAAI,CAAAC,SAAS,KAAQ,iBAAiB,CAqBtD,MAAO,MAAM,CAAAC,yBAA0B,CAGrC;AACF;AACA,KACE,YAAoB,CAAAC,YAAYA,CAACH,OAAkC,CAAmB,CACpF,KAAM,CAAAI,MAAM,CAAG,KAAM,CAAAH,SAAS,CAACF,OAAO,CAAE,CACtCM,MAAM,CAAE,MAAM,CACdC,GAAG,IAAAC,MAAA,CAAK,IAAI,CAACC,QAAQ,aAAW,CAChCC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEV,OAAO,CACbW,SAAS,CAAE,kBACb,CAAC,CAAC,CAEF,MAAO,CAAAP,MAAM,CACf,CAEA;AACF;AACA,KACE,YAAoB,CAAAQ,yBAAyBA,CAACC,YAAoB,CAAyC,CACzG,KAAM,CAAAT,MAAM,CAAG,KAAM,CAAAH,SAAS,CAACF,OAAO,CAAE,CACtCM,MAAM,CAAE,KAAK,CACbC,GAAG,IAAAC,MAAA,CAAK,IAAI,CAACC,QAAQ,eAAAD,MAAA,CAAaM,YAAY,CAAE,CAChDJ,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF,MAAO,CAAAL,MAAM,CACf,CAEA;AACF;AACA,KACE,YAAoB,CAAAU,gBAAgBA,CAACD,YAAoB,CAAmB,CAC1E,KAAM,CAAAT,MAAM,CAAG,KAAM,CAAAH,SAAS,CAACF,OAAO,CAAE,CACtCM,MAAM,CAAE,KAAK,CACbC,GAAG,IAAAC,MAAA,CAAK,IAAI,CAACC,QAAQ,eAAAD,MAAA,CAAaM,YAAY,WAAS,CACvDJ,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF,MAAO,CAAAL,MAAM,CACf,CAEA;AACF;AACA,KACE,YAAoB,CAAAW,cAAcA,CAACF,YAAoB,CAAmB,CACxE,KAAM,CAAAT,MAAM,CAAG,KAAM,CAAAH,SAAS,CAACF,OAAO,CAAE,CACtCM,MAAM,CAAE,KAAK,CACbC,GAAG,IAAAC,MAAA,CAAK,IAAI,CAACC,QAAQ,eAAAD,MAAA,CAAaM,YAAY,UAAQ,CACtDJ,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF,MAAO,CAAAL,MAAM,CACf,CACF,CAhEaF,yBAAyB,CACZM,QAAQ,CAAG,2CAA2C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
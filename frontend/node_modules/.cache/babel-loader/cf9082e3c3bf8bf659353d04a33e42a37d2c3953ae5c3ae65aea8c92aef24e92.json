{"ast":null,"code":"import{useState,useEffect}from'react';import{tokenService}from'../services/tokenService';export function useAuth(){const[isLoggedIn,setIsLoggedIn]=useState(tokenService.isLoggedIn());const[user,setUser]=useState(tokenService.getUser());useEffect(()=>{const checkAuthStatus=()=>{const loggedIn=tokenService.isLoggedIn();const currentUser=tokenService.getUser();setIsLoggedIn(loggedIn);setUser(currentUser);};// Check auth status immediately\ncheckAuthStatus();// Listen for storage changes (when token is set/removed in other tabs)\nconst handleStorageChange=e=>{if(e.key==='auth_token'){checkAuthStatus();}};window.addEventListener('storage',handleStorageChange);// Listen for custom auth events (when token is set/removed in same tab)\nconst handleAuthChange=()=>{checkAuthStatus();};window.addEventListener('authStateChange',handleAuthChange);return()=>{window.removeEventListener('storage',handleStorageChange);window.removeEventListener('authStateChange',handleAuthChange);};},[]);return{isLoggedIn,user};}","map":{"version":3,"names":["useState","useEffect","tokenService","useAuth","isLoggedIn","setIsLoggedIn","user","setUser","getUser","checkAuthStatus","loggedIn","currentUser","handleStorageChange","e","key","window","addEventListener","handleAuthChange","removeEventListener"],"sources":["/Users/cluckbucks/projects/booknexus-social/frontend/src/hooks/useAuth.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { tokenService } from '../services/tokenService';\n\nexport function useAuth() {\n  const [isLoggedIn, setIsLoggedIn] = useState(tokenService.isLoggedIn());\n  const [user, setUser] = useState(tokenService.getUser());\n\n  useEffect(() => {\n    const checkAuthStatus = () => {\n      const loggedIn = tokenService.isLoggedIn();\n      const currentUser = tokenService.getUser();\n      \n      setIsLoggedIn(loggedIn);\n      setUser(currentUser);\n    };\n\n    // Check auth status immediately\n    checkAuthStatus();\n\n    // Listen for storage changes (when token is set/removed in other tabs)\n    const handleStorageChange = (e: StorageEvent) => {\n      if (e.key === 'auth_token') {\n        checkAuthStatus();\n      }\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n\n    // Listen for custom auth events (when token is set/removed in same tab)\n    const handleAuthChange = () => {\n      checkAuthStatus();\n    };\n\n    window.addEventListener('authStateChange', handleAuthChange);\n\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n      window.removeEventListener('authStateChange', handleAuthChange);\n    };\n  }, []);\n\n  return { isLoggedIn, user };\n}"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,OAASC,YAAY,KAAQ,0BAA0B,CAEvD,MAAO,SAAS,CAAAC,OAAOA,CAAA,CAAG,CACxB,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGL,QAAQ,CAACE,YAAY,CAACE,UAAU,CAAC,CAAC,CAAC,CACvE,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGP,QAAQ,CAACE,YAAY,CAACM,OAAO,CAAC,CAAC,CAAC,CAExDP,SAAS,CAAC,IAAM,CACd,KAAM,CAAAQ,eAAe,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,QAAQ,CAAGR,YAAY,CAACE,UAAU,CAAC,CAAC,CAC1C,KAAM,CAAAO,WAAW,CAAGT,YAAY,CAACM,OAAO,CAAC,CAAC,CAE1CH,aAAa,CAACK,QAAQ,CAAC,CACvBH,OAAO,CAACI,WAAW,CAAC,CACtB,CAAC,CAED;AACAF,eAAe,CAAC,CAAC,CAEjB;AACA,KAAM,CAAAG,mBAAmB,CAAIC,CAAe,EAAK,CAC/C,GAAIA,CAAC,CAACC,GAAG,GAAK,YAAY,CAAE,CAC1BL,eAAe,CAAC,CAAC,CACnB,CACF,CAAC,CAEDM,MAAM,CAACC,gBAAgB,CAAC,SAAS,CAAEJ,mBAAmB,CAAC,CAEvD;AACA,KAAM,CAAAK,gBAAgB,CAAGA,CAAA,GAAM,CAC7BR,eAAe,CAAC,CAAC,CACnB,CAAC,CAEDM,MAAM,CAACC,gBAAgB,CAAC,iBAAiB,CAAEC,gBAAgB,CAAC,CAE5D,MAAO,IAAM,CACXF,MAAM,CAACG,mBAAmB,CAAC,SAAS,CAAEN,mBAAmB,CAAC,CAC1DG,MAAM,CAACG,mBAAmB,CAAC,iBAAiB,CAAED,gBAAgB,CAAC,CACjE,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAEb,UAAU,CAAEE,IAAK,CAAC,CAC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
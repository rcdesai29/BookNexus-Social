{"ast":null,"code":"import{request as __request}from'../core/request';import{OpenAPI}from'../core/OpenAPI';export class UserBookListService{/**\n     * Add a Google Book to a user's list\n     * @param googleBookId The Google Book ID\n     * @param listType The list type (FAVORITE, CURRENTLY_READING, TBR, READ)\n     * @returns UserBookList\n     * @throws ApiError\n     */static async addGoogleBookToList(googleBookId,listType){return __request(OpenAPI,{method:'POST',url:\"/api/v1/user-book-lists/google-books/\".concat(googleBookId,\"/add\"),query:{'listType':listType}});}/**\n     * Remove a Google Book from a user's list\n     * @param googleBookId The Google Book ID\n     * @param listType The list type (FAVORITE, CURRENTLY_READING, TBR, READ)\n     * @returns void\n     * @throws ApiError\n     */static async removeGoogleBookFromList(googleBookId,listType){return __request(OpenAPI,{method:'DELETE',url:\"/api/v1/user-book-lists/google-books/\".concat(googleBookId,\"/remove\"),query:{'listType':listType}});}/**\n     * Get all books in a specific list for the current user\n     * @param listType The list type (FAVORITE, CURRENTLY_READING, TBR, READ)\n     * @returns UserBookList[]\n     * @throws ApiError\n     */static async getUserBooksByListType(listType){return __request(OpenAPI,{method:'GET',url:\"/api/v1/user-book-lists/list-type/\".concat(listType)});}/**\n     * Get all books across all lists for the current user\n     * @returns UserBookList[]\n     * @throws ApiError\n     */static async getAllUserBooks(){return __request(OpenAPI,{method:'GET',url:'/api/v1/user-book-lists/all'});}/**\n     * Get user's favorite books\n     * @returns UserBookList[]\n     * @throws ApiError\n     */static async getFavorites(){return __request(OpenAPI,{method:'GET',url:'/api/v1/user-book-lists/favorites'});}/**\n     * Get user's currently reading books\n     * @returns UserBookList[]\n     * @throws ApiError\n     */static async getCurrentlyReading(){return __request(OpenAPI,{method:'GET',url:'/api/v1/user-book-lists/currently-reading'});}/**\n     * Get user's TBR (To Be Read) books\n     * @returns UserBookList[]\n     * @throws ApiError\n     */static async getTBR(){return __request(OpenAPI,{method:'GET',url:'/api/v1/user-book-lists/tbr'});}/**\n     * Get user's read books\n     * @returns UserBookList[]\n     * @throws ApiError\n     */static async getRead(){return __request(OpenAPI,{method:'GET',url:'/api/v1/user-book-lists/read'});}}","map":{"version":3,"names":["request","__request","OpenAPI","UserBookListService","addGoogleBookToList","googleBookId","listType","method","url","concat","query","removeGoogleBookFromList","getUserBooksByListType","getAllUserBooks","getFavorites","getCurrentlyReading","getTBR","getRead"],"sources":["/Users/cluckbucks/projects/booknexus-social/frontend/src/app/services/services/UserBookListService.ts"],"sourcesContent":["import { request as __request } from '../core/request';\nimport { OpenAPI } from '../core/OpenAPI';\nimport type { CancelablePromise } from '../core/CancelablePromise';\n\nexport interface UserBookList {\n    id?: number;\n    user?: {\n        id?: number;\n        fullName?: string;\n        email?: string;\n    };\n    book?: {\n        id?: number;\n        title?: string;\n        authorName?: string;\n        cover?: string;\n    };\n    googleBook?: {\n        id?: number;\n        googleBookId?: string;\n        title?: string;\n        authorName?: string;\n        coverUrl?: string;\n        description?: string;\n        averageRating?: number;\n        ratingsCount?: number;\n    };\n    listType?: 'FAVORITE' | 'CURRENTLY_READING' | 'TBR' | 'READ';\n    isActive?: boolean;\n    userRating?: number;\n    userReview?: string;\n    readingProgress?: number;\n    createdDate?: string;\n    lastModifiedDate?: string;\n}\n\nexport class UserBookListService {\n    /**\n     * Add a Google Book to a user's list\n     * @param googleBookId The Google Book ID\n     * @param listType The list type (FAVORITE, CURRENTLY_READING, TBR, READ)\n     * @returns UserBookList\n     * @throws ApiError\n     */\n    public static async addGoogleBookToList(\n        googleBookId: string,\n        listType: 'FAVORITE' | 'CURRENTLY_READING' | 'TBR' | 'READ'\n    ): Promise<UserBookList> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: `/api/v1/user-book-lists/google-books/${googleBookId}/add`,\n            query: {\n                'listType': listType,\n            },\n        });\n    }\n\n    /**\n     * Remove a Google Book from a user's list\n     * @param googleBookId The Google Book ID\n     * @param listType The list type (FAVORITE, CURRENTLY_READING, TBR, READ)\n     * @returns void\n     * @throws ApiError\n     */\n    public static async removeGoogleBookFromList(\n        googleBookId: string,\n        listType: 'FAVORITE' | 'CURRENTLY_READING' | 'TBR' | 'READ'\n    ): Promise<void> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: `/api/v1/user-book-lists/google-books/${googleBookId}/remove`,\n            query: {\n                'listType': listType,\n            },\n        });\n    }\n\n    /**\n     * Get all books in a specific list for the current user\n     * @param listType The list type (FAVORITE, CURRENTLY_READING, TBR, READ)\n     * @returns UserBookList[]\n     * @throws ApiError\n     */\n    public static async getUserBooksByListType(\n        listType: 'FAVORITE' | 'CURRENTLY_READING' | 'TBR' | 'READ'\n    ): Promise<UserBookList[]> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: `/api/v1/user-book-lists/list-type/${listType}`,\n        });\n    }\n\n    /**\n     * Get all books across all lists for the current user\n     * @returns UserBookList[]\n     * @throws ApiError\n     */\n    public static async getAllUserBooks(): Promise<UserBookList[]> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/api/v1/user-book-lists/all',\n        });\n    }\n\n    /**\n     * Get user's favorite books\n     * @returns UserBookList[]\n     * @throws ApiError\n     */\n    public static async getFavorites(): Promise<UserBookList[]> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/api/v1/user-book-lists/favorites',\n        });\n    }\n\n    /**\n     * Get user's currently reading books\n     * @returns UserBookList[]\n     * @throws ApiError\n     */\n    public static async getCurrentlyReading(): Promise<UserBookList[]> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/api/v1/user-book-lists/currently-reading',\n        });\n    }\n\n    /**\n     * Get user's TBR (To Be Read) books\n     * @returns UserBookList[]\n     * @throws ApiError\n     */\n    public static async getTBR(): Promise<UserBookList[]> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/api/v1/user-book-lists/tbr',\n        });\n    }\n\n    /**\n     * Get user's read books\n     * @returns UserBookList[]\n     * @throws ApiError\n     */\n    public static async getRead(): Promise<UserBookList[]> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/api/v1/user-book-lists/read',\n        });\n    }\n}\n"],"mappings":"AAAA,OAASA,OAAO,GAAI,CAAAC,SAAS,KAAQ,iBAAiB,CACtD,OAASC,OAAO,KAAQ,iBAAiB,CAmCzC,MAAO,MAAM,CAAAC,mBAAoB,CAC7B;AACJ;AACA;AACA;AACA;AACA;AACA,OACI,YAAoB,CAAAC,mBAAmBA,CACnCC,YAAoB,CACpBC,QAA2D,CACtC,CACrB,MAAO,CAAAL,SAAS,CAACC,OAAO,CAAE,CACtBK,MAAM,CAAE,MAAM,CACdC,GAAG,yCAAAC,MAAA,CAA0CJ,YAAY,QAAM,CAC/DK,KAAK,CAAE,CACH,UAAU,CAAEJ,QAChB,CACJ,CAAC,CAAC,CACN,CAEA;AACJ;AACA;AACA;AACA;AACA;AACA,OACI,YAAoB,CAAAK,wBAAwBA,CACxCN,YAAoB,CACpBC,QAA2D,CAC9C,CACb,MAAO,CAAAL,SAAS,CAACC,OAAO,CAAE,CACtBK,MAAM,CAAE,QAAQ,CAChBC,GAAG,yCAAAC,MAAA,CAA0CJ,YAAY,WAAS,CAClEK,KAAK,CAAE,CACH,UAAU,CAAEJ,QAChB,CACJ,CAAC,CAAC,CACN,CAEA;AACJ;AACA;AACA;AACA;AACA,OACI,YAAoB,CAAAM,sBAAsBA,CACtCN,QAA2D,CACpC,CACvB,MAAO,CAAAL,SAAS,CAACC,OAAO,CAAE,CACtBK,MAAM,CAAE,KAAK,CACbC,GAAG,sCAAAC,MAAA,CAAuCH,QAAQ,CACtD,CAAC,CAAC,CACN,CAEA;AACJ;AACA;AACA;AACA,OACI,YAAoB,CAAAO,eAAeA,CAAA,CAA4B,CAC3D,MAAO,CAAAZ,SAAS,CAACC,OAAO,CAAE,CACtBK,MAAM,CAAE,KAAK,CACbC,GAAG,CAAE,6BACT,CAAC,CAAC,CACN,CAEA;AACJ;AACA;AACA;AACA,OACI,YAAoB,CAAAM,YAAYA,CAAA,CAA4B,CACxD,MAAO,CAAAb,SAAS,CAACC,OAAO,CAAE,CACtBK,MAAM,CAAE,KAAK,CACbC,GAAG,CAAE,mCACT,CAAC,CAAC,CACN,CAEA;AACJ;AACA;AACA;AACA,OACI,YAAoB,CAAAO,mBAAmBA,CAAA,CAA4B,CAC/D,MAAO,CAAAd,SAAS,CAACC,OAAO,CAAE,CACtBK,MAAM,CAAE,KAAK,CACbC,GAAG,CAAE,2CACT,CAAC,CAAC,CACN,CAEA;AACJ;AACA;AACA;AACA,OACI,YAAoB,CAAAQ,MAAMA,CAAA,CAA4B,CAClD,MAAO,CAAAf,SAAS,CAACC,OAAO,CAAE,CACtBK,MAAM,CAAE,KAAK,CACbC,GAAG,CAAE,6BACT,CAAC,CAAC,CACN,CAEA;AACJ;AACA;AACA;AACA,OACI,YAAoB,CAAAS,OAAOA,CAAA,CAA4B,CACnD,MAAO,CAAAhB,SAAS,CAACC,OAAO,CAAE,CACtBK,MAAM,CAAE,KAAK,CACbC,GAAG,CAAE,8BACT,CAAC,CAAC,CACN,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}